


NAME:   my-hdfs-journalnode
REVISION: 1
CHART: hdfs-0.1.0
USER-SUPPLIED VALUES:
condition:
  subchart:
    journalnode: true
global:
  dataNodeHostPath:
  - /mnt/sda1/hdfs-data
  defaultAffinityEnabled: false
  fullnameOverride: my-hdfs
  zookeeperQuorumSize: 1
hdfs-namenode-k8s:
  hostNetworkEnabled: false
tags:
  ha: false
zookeeper:
  env:
    ZK_HEAP_SIZE: 100m
  replicaCount: 1
  resources:
    requests:
      memory: 100m

COMPUTED VALUES:
condition:
  subchart:
    journalnode: true
global:
  dataNodeHostPath:
  - /mnt/sda1/hdfs-data
  defaultAffinityEnabled: false
  fullnameOverride: my-hdfs
  journalnodeQuorumSize: 3
  jsvcEnabled: true
  kerberosConfigFileName: krb5.conf
  kerberosEnabled: false
  kerberosRealm: MYCOMPANY.COM
  namenodeHAEnabled: true
  podSecurityContext:
    enabled: false
    fsGroup: 1000
    runAsUser: 0
  zookeeperQuorumSize: 1
hdfs-config-k8s:
  customHadoopConfig:
    coreSite: {}
    hdfsSite: {}
hdfs-datanode-k8s:
  affinity: {}
  nodeSelector: {}
  tolerations: []
hdfs-journalnode-k8s:
  affinity: {}
  global:
    dataNodeHostPath:
    - /mnt/sda1/hdfs-data
    defaultAffinityEnabled: false
    fullnameOverride: my-hdfs
    journalnodeQuorumSize: 3
    jsvcEnabled: true
    kerberosConfigFileName: krb5.conf
    kerberosEnabled: false
    kerberosRealm: MYCOMPANY.COM
    namenodeHAEnabled: true
    podSecurityContext:
      enabled: false
      fsGroup: 1000
      runAsUser: 0
    zookeeperQuorumSize: 1
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    size: 20Gi
  tolerations: []
hdfs-krb5-k8s:
  image:
    pullPolicy: IfNotPresent
    repository: gcavalcante8808/krb5-server
    tag: latest
  persistence:
    accessMode: ReadWriteOnce
    size: 20Gi
  service:
    port: 88
    type: ClusterIP
hdfs-namenode-k8s:
  affinity: {}
  customRunScript: |
    #!/bin/bash -x
    echo Write your own script content!
    echo This message will disappear in 10 seconds.
    sleep 10
  hostNetworkEnabled: false
  namenodeStartScript: format-and-run.sh
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    size: 100Gi
  tolerations: []
hdfs-simple-namenode-k8s:
  affinity: {}
  nameNodeHostPath: /hdfs-name
  nodeSelector: {}
  tolerations: []
tags:
  ha: false
  kerberos: false
  simple: false
zookeeper:
  env:
    ZK_HEAP_SIZE: 100m
  replicaCount: 1
  resources:
    requests:
      memory: 100m

HOOKS:
MANIFEST:

---
# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
  annotations:
    # TODO: Deprecated. Replace tolerate-unready-endpoints with
    # v1.Service.PublishNotReadyAddresses.
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 8485
    name: jn
  - port: 8480
    name: http
  clusterIP: None
  selector:
    app: hdfs-journalnode
    release: my-hdfs-journalnode
---
# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
spec:
  serviceName: my-hdfs-journalnode
  replicas: 3
  template:
    metadata:
      labels:
        app: hdfs-journalnode
        release: my-hdfs-journalnode
    spec:
      containers:
        - name: hdfs-journalnode
          image: uhopper/hadoop-namenode:2.7.2
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
          command: ["/entrypoint.sh"]
          args: ["/opt/hadoop-2.7.2/bin/hdfs", "--config", "/etc/hadoop", "journalnode"]
          ports:
          - containerPort: 8485
            name: jn
          - containerPort: 8480
            name: http
          volumeMounts:
            # Mount a subpath of the volume so that the journal subdir would be
            # a brand new empty dir. This way, we won't get affected by
            # existing files in the volume top dir.
            - name: editdir
              mountPath: /hadoop/dfs/journal
              subPath: journal
            - name: editdir
              mountPath: /hadoop/dfs/name
              subPath: name
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: hdfs-config
          configMap:
            name: my-hdfs-config
  volumeClaimTemplates:
    - metadata:
        name: editdir
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "20Gi"
---
# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
spec:
  selector:
    matchLabels:
      app: hdfs-journalnode
      release: my-hdfs-journalnode
  minAvailable: 2
