apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "krb5-server.fullname" . }}
  labels:
    app: {{ template "krb5-server.name" . }}
    chart: {{ template "krb5-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: "krb5-server"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "krb5-server.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "krb5-server.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KRB5_REALM
              value: {{ .Values.realm }}
            - name: KRB5_KDC
              value: localhost
          ports:
            - name: kdc-tcp
              containerPort: 88
              protocol: TCP
            - name: kdc-udp
              containerPort: 88
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: kdc-tcp
          readinessProbe:
            tcpSocket:
              port: kdc-tcp
      restartPolicy: Always
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.podSecurityContext.runAsUser }}
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.dataVolumeSize }}
